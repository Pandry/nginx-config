#Security options

# Try the security with an automated tool!!
# See: https://securityheaders.com/

#reply timeout
client_body_timeout 5s;
client_header_timeout 5s;


# disables emitting nginx version on error pages and in the server response header field. 
server_tokens off;

# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
# Forces a browser to use HTTPS every time and refuses HTTP, watch out!
# See: https://hstspreload.org/
add_header Strict-Transport-Security max-age=15768000;

# Disable MIME type guessing
# Supported only from IE8+
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
#add_header X-Content-Type-Options nosniff;

# X-Frame-Options is used to avoid the usage of a frame or iframe that references a different location 
# It avoids clickjacking
# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
# See: https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
add_header X-Frame-Options SAMEORIGIN;

# This header forces the XSS filter to be active
add_header X-XSS-Protection "1; mode=block";

# Provides Clickjacking protection
add_header X-Frame-Options "SAMEORIGIN" always;

# Avoid sniffing the content type
add_header x-content-type-options "nosniff" always;

# OCSP Stapling
# Records are fetched from URL in ssl_certificate
# used for the revocation of certiifcates
# NGINX will ask the OCSP responder a signed token (that states the validity of a certificate) that's valid for an amount of time 
# This token will then be forwarded to the client
resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4;

# If supported, forces the browser do use only whitelisted sources
# Watch out! This may lead to issues
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
# generic one:
#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";
# Empty one:
#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' ; object-src 'none'";

#Referrer policy
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy
add_header Referrer-Policy "origin-when-cross-origin" always;
#add_header Referrer-Policy "no-referrer" always;

# !! EXPERIMENTAL !!
#Feature-Policy
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy
#add_header Feature-Policy "microphone 'none'; geolocation 'none'" always;
#add_header Feature-Policy "unsized-media 'none'" always;