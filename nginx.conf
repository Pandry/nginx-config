    # Taken from https://www.nginx.com/resources/wiki/start/topics/examples/full/

    #user www www;  ## Default: nobody
    #worker_processes  5;  ## Default: 1

    error_log  /var/log/nginx/error.log;
    pid        /run/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
        include    conf/mime.types;
        include    conf/proxy.conf;
        include    conf/fastcgi.conf;
        include    conf/ssl.conf;

        include   conf/security.conf;
        include   conf/cache.conf;

        index    index.html index.htm index.php;

        default_type application/octet-stream;
        log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log   /var/log/nginx/access.log  main;



        # forces a socket to send the data in its buffer
        # Can save time up to 0.2 seconds for each HTTP request
        tcp_nodelay  on;

        # Explained in the kernel space: https://elixir.bootlin.com/linux/latest/source/net/ipv4/tcp_output.c#L1469
        # Needs to be enabled with sendfile
        tcp_nopush   on;

        # More efficient for special usecases; in the other occasions it does not make a difference to use it or not
        # enabling sendfile won't make any difference unless nginx is reading from something which can be mapped into the virtual memory space like a file
        # It is a syscall, making the req more efficient
        # https://linux.die.net/man/2/sendfile
        sendfile     on;

        # Jut a feature to increase the memory reserved for the vhosts hashmap, makes sure no issue is encountered
        server_names_hash_bucket_size 128; # this seems to be required for some vhosts

        # Includes all the sites in the sites dir which has .up as extension
        include     sites/*.vh;

    	# Redirects all HTTP services to HTTPS
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name _;
            
            location /.well-known/acme-challenge {
		        root /var/www/httpschallenges;
			}
            
            return 301 https://$host$request_uri;
        }

        # Default HTTPS Server
        # openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/ssl/nginx-selfsigned.key -out /etc/ssl/nginx-selfsigned.crt
        #server {
        #    listen 443 ssl default_server;
        #    listen [::]:443 ssl default_server;
        #    server_name _;
        #    ssl_certificate /etc/ssl/nginx-selfsigned.crt;
        #    ssl_certificate_key /etc/ssl/nginx-selfsigned.key;
        #    ssl_stapling off;
    	#    ssl_stapling_verify off;
        #
        #    return 403;
        #}


        #   server { # php/fastcgi
        #    listen       80;
        #    server_name  domain1.com www.domain1.com;
        #    access_log   logs/domain1.access.log  main;
        #    root         html;
        #
        #    location ~ \.php$ {
        #      fastcgi_pass   127.0.0.1:1025;
        #    }
        #  }
        #
        #  server { # simple reverse-proxy
        #    listen       80;
        #    server_name  domain2.com www.domain2.com;
        #    access_log   logs/domain2.access.log  main;
        #
        #    # serve static files
        #    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
        #      root    /var/www/virtual/big.server.com/htdocs;
        #      expires 30d;
        #    }
        #
        #    # pass requests for dynamic content to rails/turbogears/zope, et al
        #    location / {
        #      proxy_pass      http://127.0.0.1:8080;
        #    }
        #  }
        #
        #  upstream big_server_com {
        #    server 127.0.0.3:8000 weight=5;
        #    server 127.0.0.3:8001 weight=5;
        #    server 192.168.0.1:8000;
        #    server 192.168.0.1:8001;
        #  }
        #
        #  server { # simple load balancing
        #    listen          80;
        #    server_name     big.server.com;
        #    access_log      logs/big.server.access.log main;
        #
        #    location / {
        #      proxy_pass      http://big_server_com;
        #    }
        #  }  
    }
